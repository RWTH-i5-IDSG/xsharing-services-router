<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">http-remoting://137.226.232.43:8090</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Scenario Test Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1000</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1439831427000</longProp>
        <longProp name="ThreadGroup.end_time">1439831427000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Reader" enabled="true">
          <stringProp name="filename">requests_scenario.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">LONSTART,LATSTART,LONEND,LATEND,ISARRIVALTIME,ISLASTLEG,ISWITHRETURN,STAYTIME,MODALTYPE,COMMENTARY</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell currentTimeMillis" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters">${ISARRIVALTIME},</stringProp>
          <boolProp name="resetInterpreter">true</boolProp>
          <stringProp name="script">import java.util.*;

String [] params = Parameters.split(&quot;,&quot;);

long time = System.currentTimeMillis();
if (params[0] == &quot;false&quot;)
	{ vars.put(&quot;TIMESTAMP&quot;,String.valueOf(time)); }
else
	{ vars.put(&quot;TIMESTAMP&quot;,String.valueOf(time+36000000)); }</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Route Request" enabled="true">
          <stringProp name="JMSSampler.queueconnectionfactory">jms/RemoteConnectionFactory</stringProp>
          <stringProp name="JMSSampler.SendQueue">jms/queue/xSharingMinimalRequestQueue</stringProp>
          <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
          <boolProp name="JMSSampler.isFireAndForget">false</boolProp>
          <boolProp name="JMSSampler.isNonPersistent">true</boolProp>
          <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
          <stringProp name="JMSSampler.timeout">0</stringProp>
          <stringProp name="HTTPSamper.xml_data">{
	&quot;startGeoCoordinates&quot;:[{
		&quot;longitude&quot;:${LONSTART},
		&quot;latitude&quot;:${LATSTART}
	}],
	&quot;endGeoCoordinates&quot;:[{
		&quot;longitude&quot;:${LONEND},
		&quot;latitude&quot;:${LATEND}
	}],
	&quot;departureTime&quot;:[${TIMESTAMP}],
	&quot;isArrivalTime&quot;:${ISARRIVALTIME},
	&quot;isLastLeg&quot;:${ISLASTLEG},
	&quot;isWithReturn&quot;:${ISWITHRETURN},
	&quot;stayTime&quot;: ${STAYTIME},
	&quot;modalTypes&quot;:[&quot;${MODALTYPE}&quot;],
	&quot;maxWalkDistance&quot;:4500,
	&quot;_requestComment&quot;:&quot;${COMMENTARY}&quot;	
}</stringProp>
          <stringProp name="JMSSampler.initialContextFactory">org.jboss.naming.remote.client.InitialContextFactory</stringProp>
          <stringProp name="JMSSampler.contextProviderUrl">${URL}</stringProp>
          <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="java.naming.security.principal" elementType="Argument">
                <stringProp name="Argument.name">java.naming.security.principal</stringProp>
                <stringProp name="Argument.value">guest</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="java.naming.security.credentials" elementType="Argument">
                <stringProp name="Argument.name">java.naming.security.credentials</stringProp>
                <stringProp name="Argument.value">guest</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="java.naming.factory.url.pkgs" elementType="Argument">
                <stringProp name="Argument.name">java.naming.factory.url.pkgs</stringProp>
                <stringProp name="Argument.value">org.jboss.naming.remote.client</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="jboss.naming.client.connect.timeout" elementType="Argument">
                <stringProp name="Argument.name">jboss.naming.client.connect.timeout</stringProp>
                <stringProp name="Argument.value">10000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="arguments" elementType="JMSProperties">
            <collectionProp name="JMSProperties.properties">
              <elementProp name="" elementType="JMSProperty">
                <stringProp name="JMSProperty.name">JMSCorrelationID</stringProp>
                <stringProp name="JMSProperty.value">asdf</stringProp>
                <stringProp name="JMSProperty.type">java.lang.String</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="JMSSampler.priority">9</stringProp>
          <boolProp name="JMSSampler.useResMsgIdAsCorrelId">true</boolProp>
        </JMSSampler>
        <hashTree>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - error code extractor" enabled="true">
            <stringProp name="VAR">ERROR_CODE</stringProp>
            <stringProp name="JSONPATH">$.routerError.errorCode</stringProp>
            <stringProp name="DEFAULT">null</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1818261426">NO_ROUTE_FOUND</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">12</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">ERROR_CODE</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - JSON Path Extractor" enabled="true">
            <stringProp name="VAR">ROUTE_ID</stringProp>
            <stringProp name="JSONPATH">$[0].tripId</stringProp>
            <stringProp name="DEFAULT">&quot;null&quot;</stringProp>
            <stringProp name="VARIABLE"></stringProp>
            <stringProp name="SUBJECT">BODY</stringProp>
          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">${ROUTE_ID} != &quot;null&quot;;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Compact Follow Up" enabled="true">
            <stringProp name="JMSSampler.queueconnectionfactory">jms/RemoteConnectionFactory</stringProp>
            <stringProp name="JMSSampler.SendQueue">jms/queue/xSharingCompactRequestQueue</stringProp>
            <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
            <boolProp name="JMSSampler.isFireAndForget">false</boolProp>
            <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
            <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
            <stringProp name="JMSSampler.timeout">0</stringProp>
            <stringProp name="HTTPSamper.xml_data">{&quot;tripId&quot;: &quot;${ROUTE_ID}&quot;}</stringProp>
            <stringProp name="JMSSampler.initialContextFactory">org.jboss.naming.remote.client.InitialContextFactory</stringProp>
            <stringProp name="JMSSampler.contextProviderUrl">${URL}</stringProp>
            <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="java.naming.security.principal" elementType="Argument">
                  <stringProp name="Argument.name">java.naming.security.principal</stringProp>
                  <stringProp name="Argument.value">guest</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="java.naming.security.credentials" elementType="Argument">
                  <stringProp name="Argument.name">java.naming.security.credentials</stringProp>
                  <stringProp name="Argument.value">guest</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="arguments" elementType="JMSProperties">
              <collectionProp name="JMSProperties.properties">
                <elementProp name="" elementType="JMSProperty">
                  <stringProp name="JMSProperty.name">JMSCorrelationID</stringProp>
                  <stringProp name="JMSProperty.value">asdfzzz</stringProp>
                  <stringProp name="JMSProperty.type">java.lang.String</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="JMSSampler.priority">9</stringProp>
            <boolProp name="JMSSampler.useResMsgIdAsCorrelId">true</boolProp>
          </JMSSampler>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - error code extractor" enabled="false">
              <stringProp name="VAR">ERROR_CODE</stringProp>
              <stringProp name="JSONPATH">$.routerError.errorCode</stringProp>
              <stringProp name="DEFAULT">null</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1818261426">NO_ROUTE_FOUND</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">12</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">ERROR_CODE</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON null check" enabled="false">
              <stringProp name="JSON_PATH">$.routerError</stringProp>
              <stringProp name="EXPECTED_VALUE"></stringProp>
              <boolProp name="JSONVALIDATION">false</boolProp>
              <boolProp name="EXPECT_NULL">true</boolProp>
              <boolProp name="INVERT">false</boolProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
            <hashTree/>
          </hashTree>
          <JMSSampler guiclass="JMSSamplerGui" testclass="JMSSampler" testname="Details Follow Up" enabled="true">
            <stringProp name="JMSSampler.queueconnectionfactory">jms/RemoteConnectionFactory</stringProp>
            <stringProp name="JMSSampler.SendQueue">jms/queue/xSharingDetailsRequestQueue</stringProp>
            <stringProp name="JMSSampler.ReceiveQueue"></stringProp>
            <boolProp name="JMSSampler.isFireAndForget">false</boolProp>
            <boolProp name="JMSSampler.isNonPersistent">false</boolProp>
            <boolProp name="JMSSampler.useReqMsgIdAsCorrelId">true</boolProp>
            <stringProp name="JMSSampler.timeout">0</stringProp>
            <stringProp name="HTTPSamper.xml_data">{&quot;tripId&quot;: &quot;${ROUTE_ID}&quot;}</stringProp>
            <stringProp name="JMSSampler.initialContextFactory">org.jboss.naming.remote.client.InitialContextFactory</stringProp>
            <stringProp name="JMSSampler.contextProviderUrl">${URL}</stringProp>
            <elementProp name="JMSSampler.jndiProperties" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="java.naming.security.credentials" elementType="Argument">
                  <stringProp name="Argument.name">java.naming.security.credentials</stringProp>
                  <stringProp name="Argument.value">guest</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="java.naming.security.principal" elementType="Argument">
                  <stringProp name="Argument.name">java.naming.security.principal</stringProp>
                  <stringProp name="Argument.value">guest</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="arguments" elementType="JMSProperties">
              <collectionProp name="JMSProperties.properties">
                <elementProp name="" elementType="JMSProperty">
                  <stringProp name="JMSProperty.name">JMSCorrelationID</stringProp>
                  <stringProp name="JMSProperty.value">asdfzzz</stringProp>
                  <stringProp name="JMSProperty.type">java.lang.String</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="JMSSampler.priority">9</stringProp>
            <boolProp name="JMSSampler.useResMsgIdAsCorrelId">true</boolProp>
          </JMSSampler>
          <hashTree>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="jp@gc - error code extractor" enabled="false">
              <stringProp name="VAR">ERROR_CODE</stringProp>
              <stringProp name="JSONPATH">$.routerError.errorCode</stringProp>
              <stringProp name="DEFAULT">null</stringProp>
              <stringProp name="VARIABLE"></stringProp>
              <stringProp name="SUBJECT">BODY</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1818261426">NO_ROUTE_FOUND</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">12</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">ERROR_CODE</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="jp@gc - JSON null check" enabled="false">
              <stringProp name="JSON_PATH">$.routerError</stringProp>
              <stringProp name="EXPECTED_VALUE"></stringProp>
              <boolProp name="JSONVALIDATION">false</boolProp>
              <boolProp name="EXPECT_NULL">true</boolProp>
              <boolProp name="INVERT">false</boolProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">results.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">scenarios-${__time(HHmm_dd-MM-yyyy)}.log</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <threadCounts>true</threadCounts>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
